name: "Release : NPM packages Beta"

on:
  push:
    branches:
      - 'FINNoco-20*'

env:
  TERRAFORM_CLOUD_TOKENS: |
    app.terraform.io=${{ secrets.TF_API_TOKEN }}

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'packages/nc-gui/**'
  release:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    env:
      working-directory: ./packages/nocodb
    strategy:
      matrix:
        node-version: [12]
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          cd packages/nc-gui
          npm install
          npm run build:copy:jsdeliver || true
          cd ../..
          npm install
          node scripts/upgradeNcGui.js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
#          commit-message: Update report
#          committer: GitHub <noreply@github.com>
#          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: true
          branch: release-patches
          delete-branch: true
          title: 'update nc-lib-gui'
          labels: |
            automerge

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

      - name: automerge
        uses: "pascalgn/automerge-action@v0.14.3"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          PULL_REQUEST: "${{ steps.cpr.outputs.pull-request-number }}"
  buildx:
    runs-on: ubuntu-latest
    needs: [release]
    env:
      working-directory: ./packages/nocodb
    strategy:
      matrix:
        node-version: [ 12 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: ${{ env.working-directory }}

      - name: Build nocodb and docker files
        run: |
          npm run build
          npm run docker:build
        working-directory: ${{ env.working-directory }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working-directory }}
          build-args: NC_VERSION=${{ steps.branch-name.outputs.ref_branch }}-beta
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: |
            finnauto/nocodb:${{ steps.branch-name.outputs.ref_branch }}-beta
            finnauto/nocodb:dev

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  terraform:
    runs-on: ubuntu-latest
    needs: [buildx]
    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
      env: 
        token: ${{ secrets.GITLAB_ACCESS_TOKEN }}s
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5.1
    - name: Push To Gitlab
      run: |
        echo Starting to push repo to gitlab
        git clone https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@gitlab.com/finn.auto/finance/nocodb-infrastructure.git
        cd nocodb-infrastructure
        git config user.name "${{ secrets.GITLAB_USER_NAME }}"
        git config user.email "${{ secrets.GITLAB_EMAIL }}"
        git pull
        perl -pi -e 's/(noco_image_version\s*=\s*")(.*")/\1${{ steps.branch-name.outputs.ref_branch }}-beta"/' terraform/development/app.tf
        git add terraform/development/app.tf
        git commit -m "[Auto] update image ${{ steps.branch-name.outputs.ref_branch }} for dev"
        git push
